#pragma checksum "E:\CRUD_VscodeCore\EmployeeDetails\Views\Registration\ShapeFile.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c26"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Registration_ShapeFile), @"mvc.1.0.view", @"/Views/Registration/ShapeFile.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\CRUD_VscodeCore\EmployeeDetails\Views\_ViewImports.cshtml"
using EmployeeDetails

#nullable disable
    ;
#nullable restore
#line 2 "E:\CRUD_VscodeCore\EmployeeDetails\Views\_ViewImports.cshtml"
using EmployeeDetails.Models

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c26", @"/Views/Registration/ShapeFile.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"9f3b1e38fdd76f4e1aeba29fad7fa67f77437b19025040a7c06b58d1447262f7", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Registration_ShapeFile : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/leaflet.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/leaflet-routing-machine.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "16.5062,80.6480", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "16.1920,81.1316", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/leaflet.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/shapefile.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/leaflet-routing-machine.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c266478", async() => {
                WriteLiteral("\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>GIS Shape File Example</title>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c266923", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c268125", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
   
    <style>
          body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
        }
        .card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            height: 26rem;
            margin: auto;
        }
        .card-map{
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            height: 25rem;
            margin: auto;
        }
        #map {
            height: 400px;
            width: 100%;
            margin-bottom: 20px;
        }
        .row {
            display: flex;
            flex-wrap: wrap;
            margin: -10px;
        }
        .col-3, .col-6 {
            padding: 10px;
            flex: 1 1 100%; /* Default to full width */
        }
        ");
                WriteLiteral(@"@media (min-width: 600px) {
            .col-3 {
                flex: 1 1 33%; /* 3 columns on larger screens */
            }
            .col-6 {
                flex: 1 1 66%; /* 2 columns on larger screens */
            }
        }
        input {
           /*  width: 80%; */
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
            width: 150px;
            padding: 10px;
        }
        button:hover {
            background-color: #0056b3;
         }
        #disLocation {
            display: none;
        }
        #disMileage {
            display: none;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2611929", async() => {
                WriteLiteral(@"
    <h1 style=""text-align: center;"">GIS Shape File Example</h1>
    <div class=""row"" style=""margin-bottom: 10px;"">
        <div class=""col-3 mb-3"">
            <div class=""card"" >
                <h5 style=""text-align: center;"">
                    Upload Shape File</h1>
                    <input type=""file"" id=""shapefile"" accept="".shp,.zip"" />
                    <button id=""upload"">Upload Shapefile</button>
            </div>
        </div>

        <div class=""col-3 mb-3"">

            <div id=""disLocation"">

                <div class=""card"">
                    <h5 style=""text-align: center;"">
                        Distance Check</h1>
                        From:
                        <select id=""fromLocation"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2613021", async() => {
                    WriteLiteral("Vijayawada");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2614301", async() => {
                    WriteLiteral("Machilipatnam");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        </select>\r\n                        To:\r\n                        <select id=\"toLocation\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2615706", async() => {
                    WriteLiteral("Machilipatnam");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2616989", async() => {
                    WriteLiteral("Vijayawada");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                        <br />
                        <button id=""chkDistance"">Check Distance</button>
                        <div id=""result"" style=""margin-top: 10px;""></div>
                </div>
            </div>
        </div>

        <div class=""col-6 mb-3"">
            <div id=""disMileage"">

                <div class=""card"">
                    <h5 style=""text-align: center;"">
                        Mileage Check</h1>
                        <div class=""form-horizontal fuelcostform"" id=""fuelcostform"">
                            <div class=""row form-group lamount "">
                                <div class=""col-xs-12 col-md-6 text-align"">
                                    <div class=""col-xs-12 col-md-12 boxpadding"">
                                        <div class=""col-xs-12 col-md-2 m-t10 labelCenter"">
                                            <label class=""labelInput"" for=""exampleInputName2"">Distance:</label>
                      ");
                WriteLiteral(@"                  </div>
                                        <div class=""col-xs-12 col-md-6 boxpadding"">
                                            <div id=""chkresult"" style=""margin-top: 10px;""></div>
                                        </div>

                                    </div>
                                    <div class=""col-xs-12 col-md-12 m-t10 boxpadding"">
                                        <div class=""col-xs-12 col-md-2 m-t20 labelCenter"">
                                            <label class=""labelInput"" for=""exampleInputName2"">Fuel</label>
                                        </div>
                                        <div class=""col-xs-12 col-md-6  boxpadding boxmargin"">
                                            <input type=""number"" class=""form-control input-mb10 h40"" id=""fuel"" onkeyup=""mileage()"" placeholder=""liter"">
                                        </div>

                                    </div>
                                    <div c");
                WriteLiteral(@"lass=""col-xs-12 col-md-12 m-t10 extra-m-b20 boxpadding"">
                                        <div class=""col-xs-12 col-md-2 m-t20 labelCenter"">
                                            <label class=""labelInput"" for=""exampleInputName2"">Price</label>
                                        </div>
                                        <div class=""col-xs-12 col-md-6 boxpadding boxmargin"">
                                            <input type=""number"" class=""form-control input-mb10 h40"" id=""cost"" pattern=""[0-9]+"" value=""109.58"" onkeyup=""mileage()"">
                                        </div>
                                    </div>
                                    <div class=""calcBtnBox"" style=""text-align:center"">
                                        <button type=""button"" onclick=""mileage()"" class=""btn mainBtn site-button yellow m-t10"" style=""letter-spacing: 1px;font-weight: 600;"">Calculate</button>
                                        <button type=""button"" onclick=""resetFields()");
                WriteLiteral(@""" class=""btn mainBtn site-button yellow m-t10"" style=""letter-spacing: 1px;font-weight: 600;"">Reset</button>
                                    </div>
                                </div>
                                <div class=""col-xs-12 col-md-6 text-align"">
                                    <div class=""table-responsive marginTop"">
                                        <table class=""table table-bordered"">
                                            <thead class=""dataTblHead"">
                                                <tr>
                                                    <th>Units</th>
                                                    <th>Output</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Distance</td>
                                               ");
                WriteLiteral(@"     <td>
                                                        <span id=""Total_dist"">-</span>
                                                        <b><span id=""distance_Unit""></span></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>Fuel</td>
                                                    <td>
                                                        <span id=""Total_Fuel"">-</span>
                                                        <b><span id=""fuelUnit""></span></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>Total Amount</td>
                                                    <td>
                                                      ");
                WriteLiteral(@"  <span id=""Total_Amt"">-</span>
                                                        <b><span id=""currency_Unit""></span></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>Fuel Cost Per Kilometer</td>
                                                    <td>
                                                        <span id=""fuelExpense"">-</span>
                                                        <b><span id=""distancePerUnit""></span></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td colspan=""2"" class=""text-center f18"">
                                                        <b>Mileage: <span id=""mileageResult"">0</span></b>
                         ");
                WriteLiteral(@"                           </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""card-map"">
        <div id=""map""></div>
    </div>



   
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2625232", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2626356", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "06ecc3806178633811d7bf22b326c9578d5c34518cb5ab3f2b753b0433950c2627480", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
                WriteLiteral(@"    <script>
        function mileage() {
            // Get the distance from the distance check result (chkresult)
            const distance = parseFloat(document.getElementById('chkresult').innerText);
            const fuel = parseFloat(document.getElementById('fuel').value);
            const price = parseFloat(document.getElementById('cost').value);

            if (isNaN(distance) || isNaN(fuel) || isNaN(price)) {
                alert(""Please enter valid values for distance, fuel, and price."");
                return;
            }

            // Update displayed distance
            document.getElementById('Total_dist').innerText = distance.toFixed(2);
            document.getElementById('distance_Unit').innerText = ""km""; // Distance in kilometers

            // Update displayed fuel
            document.getElementById('Total_Fuel').innerText = fuel.toFixed(2);
            document.getElementById('fuelUnit').innerText = ""L""; // Fuel in liters

            // Calculate total fue");
                WriteLiteral(@"l cost
            const totalFuelCost = fuel * price;
            document.getElementById('Total_Amt').innerText = totalFuelCost.toFixed(2);
            document.getElementById('currency_Unit').innerText = ""₹""; // Assuming currency in INR

            // Calculate fuel cost per kilometer
            const fuelCostPerKilometer = totalFuelCost / distance;
            document.getElementById('fuelExpense').innerText = fuelCostPerKilometer.toFixed(2);
            document.getElementById('distancePerUnit').innerText = ""₹/km"";

            // Calculate mileage (distance per liter of fuel)
            const mileageValue = distance / fuel;
            document.getElementById('mileageResult').innerText = mileageValue.toFixed(2);
        }

        function resetFields() {
            document.getElementById('fuel').value = """";
            document.getElementById('cost').value = ""109.58""; // Reset default price
            document.getElementById('chkresult').innerText = ""-""; // Reset distance
     ");
                WriteLiteral(@"       document.getElementById('Total_dist').innerText = ""-"";
            document.getElementById('Total_Fuel').innerText = ""-"";
            document.getElementById('Total_Amt').innerText = ""-"";
            document.getElementById('fuelExpense').innerText = ""-"";
            document.getElementById('mileageResult').innerText = ""0"";
        }
    </script>


    <script>
        // Create a map and set its view to a specific location and zoom level
        const map = L.map('map').setView([16.5062, 80.6480], 13); // Example coordinates for Vijayawada

        // Add OpenStreetMap tile layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        // Variable to hold the current GeoJSON layer
        let currentGeoJsonLayer = null;
        let routingControl = null; // Variable to hold the routing control

        // Function to handle file upload
        document.getElementById('upload').addEventListener('click', ");
                WriteLiteral(@"() => {
            const fileInput = document.getElementById('shapefile');
            const file = fileInput.files[0];

            if (!file) {
                alert('Please select a shapefile to upload.');
                return;
            }

            // Read the shapefile
            const reader = new FileReader();
            reader.onload = function(event) {
                const data = new Uint8Array(event.target.result);

                // Use shapefile library to open the shapefile
                shapefile.read(data)
                    .then(geojson => {
                        console.log(geojson); // Log the GeoJSON structure

                        // Remove the existing GeoJSON layer if it exists
                        if (currentGeoJsonLayer) {
                            map.removeLayer(currentGeoJsonLayer);
                        }

                        // Create a new GeoJSON layer
                        currentGeoJsonLayer = L.geoJSON(geojson, {
   ");
                WriteLiteral(@"                         style: {
                                color: 'black', // Track color
                          weight: 4, // Line thickness
                          dashArray: '10, 5', // Dashed line pattern
                    fill: false // No fill for railway tracks
                            }
                        }).addTo(map);

                        // Check and log the bounds
                        const bounds = currentGeoJsonLayer.getBounds();
                        console.log(""Bounds:"", bounds); // Log bounds for debugging

                        // Fit the map to the bounds of the loaded GeoJSON
                        map.fitBounds(bounds);

                        // Show the dropdowns for location selection
                        document.getElementById('disLocation').style.display = 'block';
                        document.getElementById('disMileage').style.display = 'block';

                    })
                    .catch(error => {
            ");
                WriteLiteral(@"            console.error(error);
                        alert('Error reading shapefile: ' + error.message);
                    });
            };

            // Read the shapefile as an array buffer
            reader.readAsArrayBuffer(file);
        });

        // Check distance button functionality
        document.getElementById('chkDistance').addEventListener('click', () => {
            const from = document.getElementById('fromLocation').value.split(',');
            const to = document.getElementById('toLocation').value.split(',');

            const fromLatLng = L.latLng(from[0], from[1]);
            const toLatLng = L.latLng(to[0], to[1]);

            // Remove the existing routing control if it exists
            if (routingControl) {
                map.removeControl(routingControl);
            }

            // Create a new routing control
            routingControl = L.Routing.control({
                waypoints: [
                    fromLatLng,
                ");
                WriteLiteral(@"    toLatLng
                ],
                routeWhileDragging: true
            }).addTo(map);
             // Listen for routing result to calculate distance
        routingControl.on('routesfound', function(e) {
            const route = e.routes[0];
            const distance = route.summary.totalDistance; // in meters
            document.getElementById('result').innerText = `Distance: ${(distance / 1000).toFixed(2)} km`;
            document.getElementById('chkresult').innerText = (distance / 1000).toFixed(2);

        });
        });
    </script>  
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
